import { StateInterface } from "@kyve/contract-pool/dist/faces";
import Arweave from "arweave";
import { JWKInterface } from "arweave/node/lib/wallet";
declare type Keyfile = JWKInterface | "use_wallet";
export declare class Pool {
    client: Arweave;
    wallet: Keyfile;
    state?: StateInterface;
    id?: string;
    private src;
    private governance;
    private treasury;
    constructor(arweave: Arweave, wallet: Keyfile, id?: string);
    create(state: StateInterface): Promise<string>;
    getState(useCache?: boolean): Promise<StateInterface>;
    getUnhandledTxs(address: string, useCache?: boolean): Promise<string[]>;
    processOutbox(): Promise<string>;
    deposit(qty: number): Promise<string>;
    withdraw(qty: number): Promise<string>;
    fund(qty: number): Promise<string>;
    unfund(qty: number): Promise<string>;
    stake(qty: number): Promise<string>;
    unstake(qty: number): Promise<string>;
    private interactWithGovernance;
    private interactWithPool;
}
export {};
